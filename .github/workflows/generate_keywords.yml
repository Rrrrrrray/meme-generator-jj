name: Generate Meme Keywords

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 获取完整的 git 历史

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install --upgrade pip

      - name: Backup current meme_keywords.md if exists
        run: |
          if [ -f docs/meme_keywords.md ]; then
            cp docs/meme_keywords.md docs/meme_keywords.md.backup
            echo "Backed up existing meme_keywords.md"
          else
            echo "No existing meme_keywords.md found"
          fi

      - name: Run meme_keywords.py
        run: python meme_keywords.py

      - name: Check if meme_keywords.md changed
        id: check_diff
        run: |
          if [ ! -f docs/meme_keywords.md.backup ]; then
            echo "No backup file, this is a new file."
            echo "changed=true" >> $GITHUB_OUTPUT
          elif cmp -s docs/meme_keywords.md docs/meme_keywords.md.backup; then
            echo "No changes detected."
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "Changes detected."
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Update GitHub Wiki
        if: steps.check_diff.outputs.changed == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          
          # 检查 Wiki 仓库是否存在
          if git ls-remote https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/jinjiao007/meme-generator-jj.wiki.git &>/dev/null; then
            echo "Wiki repository exists, proceeding with update"
            
            # 克隆 Wiki 仓库
            git clone https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/jinjiao007/meme-generator-jj.wiki.git wiki
            cd wiki
            
            # 在 Wiki 仓库中设置 Git 用户配置
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            
            # 列出当前 Wiki 中的文件
            echo "Current files in wiki:"
            ls -la
            
            # 复制生成的文档到 Wiki，使用中文文件名
            cp ../docs/meme_keywords.md "表情列表.md"
            echo "Copied meme_keywords.md to 表情列表.md"
            
            # 显示文件内容的前几行进行调试
            echo "First 10 lines of 表情列表.md:"
            head -10 "表情列表.md"
            
            # 添加文件到 git
            git add "表情列表.md"
            
            # 检查 git 状态
            echo "Git status:"
            git status
            
            # 检查是否有变化
            if git diff --cached --quiet; then
              echo "No changes in wiki after staging"
            else
              echo "Changes detected, committing..."
              git commit -m "🤖 Auto-update 表情列表"
              git push origin master
              echo "Wiki updated successfully"
            fi
          else
            echo "⚠️ Wiki repository does not exist yet."
            echo "Please create a Wiki page manually first by:"
            echo "1. Go to your GitHub repository"
            echo "2. Click on 'Wiki' tab"
            echo "3. Create a new page called '表情列表'"
            echo "4. The workflow will automatically update it on the next run"
          fi

      - name: Cleanup backup file
        if: always()
        run: |
          if [ -f docs/meme_keywords.md.backup ]; then
            rm docs/meme_keywords.md.backup
            echo "Cleaned up backup file"
          fi
